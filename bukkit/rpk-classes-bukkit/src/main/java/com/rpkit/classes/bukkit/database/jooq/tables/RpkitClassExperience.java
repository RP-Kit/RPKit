/*
 * This file is generated by jOOQ.
 */
package com.rpkit.classes.bukkit.database.jooq.tables;


import com.rpkit.classes.bukkit.database.jooq.RpkitClasses;
import com.rpkit.classes.bukkit.database.jooq.tables.records.RpkitClassExperienceRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitClassExperience extends TableImpl<RpkitClassExperienceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_classes.rpkit_class_experience</code>
     */
    public static final RpkitClassExperience RPKIT_CLASS_EXPERIENCE = new RpkitClassExperience();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitClassExperienceRecord> getRecordType() {
        return RpkitClassExperienceRecord.class;
    }

    /**
     * The column <code>rpkit_classes.rpkit_class_experience.character_id</code>.
     */
    public final TableField<RpkitClassExperienceRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_classes.rpkit_class_experience.class_name</code>.
     */
    public final TableField<RpkitClassExperienceRecord, String> CLASS_NAME = createField(DSL.name("class_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_classes.rpkit_class_experience.experience</code>.
     */
    public final TableField<RpkitClassExperienceRecord, Integer> EXPERIENCE = createField(DSL.name("experience"), SQLDataType.INTEGER.nullable(false), this, "");

    private RpkitClassExperience(Name alias, Table<RpkitClassExperienceRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitClassExperience(Name alias, Table<RpkitClassExperienceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_classes.rpkit_class_experience</code> table reference
     */
    public RpkitClassExperience(String alias) {
        this(DSL.name(alias), RPKIT_CLASS_EXPERIENCE);
    }

    /**
     * Create an aliased <code>rpkit_classes.rpkit_class_experience</code> table reference
     */
    public RpkitClassExperience(Name alias) {
        this(alias, RPKIT_CLASS_EXPERIENCE);
    }

    /**
     * Create a <code>rpkit_classes.rpkit_class_experience</code> table reference
     */
    public RpkitClassExperience() {
        this(DSL.name("rpkit_class_experience"), null);
    }

    public <O extends Record> RpkitClassExperience(Table<O> child, ForeignKey<O, RpkitClassExperienceRecord> key) {
        super(child, key, RPKIT_CLASS_EXPERIENCE);
    }

    @Override
    public Schema getSchema() {
        return RpkitClasses.RPKIT_CLASSES;
    }

    @Override
    public RpkitClassExperience as(String alias) {
        return new RpkitClassExperience(DSL.name(alias), this);
    }

    @Override
    public RpkitClassExperience as(Name alias) {
        return new RpkitClassExperience(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitClassExperience rename(String name) {
        return new RpkitClassExperience(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitClassExperience rename(Name name) {
        return new RpkitClassExperience(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
