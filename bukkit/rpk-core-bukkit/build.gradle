/*
 * Copyright 2021 Ren Binden
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

import org.apache.tools.ant.filters.ReplaceTokens

def repoUserName = ""
def repoPassword = ""
def propertiesFile = new File("repo.properties")
if (propertiesFile.exists()) {
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    repoUserName = properties.getProperty("repo-username")
    repoPassword = properties.getProperty("repo-password")
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "1.7.0"
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "1.7.0"
    implementation group: "org.spigotmc", name: "spigot-api", version: "1.18.2-R0.1-SNAPSHOT"
    implementation group: "org.bstats", name: "bstats-bukkit", version: "3.0.0"
    implementation project(":rpk-core")
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

shadowJar {

    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-common"))
        include(dependency("org.jetbrains:annotations"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
        include(dependency("org.bstats:bstats-bukkit"))
        include(dependency("org.bstats:bstats-base"))
        include(project(":rpk-core"))
        include(dependency("mysql:mysql-connector-java"))
        include(dependency("com.google.protobuf:protobuf-java"))
        include(dependency("org.xerial:sqlite-jdbc"))
        include(dependency("org.slf4j:slf4j-jdk14"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("com.zaxxer:HikariCP"))
        include(dependency("org.flywaydb:flyway-core"))
        include(dependency("org.flywaydb:flyway-mysql"))
        include(dependency("org.scijava:parsington"))
    }


    relocate "kotlin", "com.rpkit.core.bukkit.shadow.kotlin"
    relocate "org.jetbrains", "com.rpkit.core.bukkit.shadow.org.jetbrains"
    relocate "org.intellij", "com.rpkit.core.bukkit.shadow.org.intellij"
    relocate "org.bstats", "com.rpkit.core.bukkit.shadow.org.bstats"
    relocate "com.mysql", "com.rpkit.core.bukkit.shadow.com.mysql"
    relocate "com.google.protobuf", "com.rpkit.core.bukkit.shadow.com.google.protobuf"
    relocate "google.protobuf", "com.rpkit.core.bukkit.shadow.google.protobuf"
    // relocate "org.sqlite", "com.rpkit.core.bukkit.shadow.org.sqlite" // This includes native libraries which are broken by relocation
    relocate "org.slf4j", "com.rpkit.core.bukkit.shadow.org.slf4j"
    relocate "com.zaxxer", "com.rpkit.core.bukkit.shadow.com.zaxxer"
    relocate "org.flywaydb", "com.rpkit.core.bukkit.shadow.org.flywaydb"
    relocate "org.scijava", "com.rpkit.core.bukkit.shadow.org.scijava"

    mergeServiceFiles()

}

artifacts {
    archives shadowJar
}

publishing {
    repositories {
        maven {
            credentials {
                username repoUserName
                password repoPassword
            }
            url "https://repo.rpkit.com/repository/maven-releases/"
        }
    }
    publications {
        maven(MavenPublication) { publication ->
            version = project(":bukkit:rpk-core-bukkit").version
            artifactId = project(":bukkit:rpk-core-bukkit").name
            groupId = project(":bukkit:rpk-core-bukkit").group

            from project(":bukkit:rpk-core-bukkit").shadow.component(publication)
        }
    }
}