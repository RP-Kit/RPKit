/*
 * Copyright 2021 Ren Binden
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

import org.apache.tools.ant.filters.ReplaceTokens

def repoUserName = ""
def repoPassword = ""
def propertiesFile = new File("repo.properties")
if (propertiesFile.exists()) {
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    repoUserName = properties.getProperty("repo-username")
    repoPassword = properties.getProperty("repo-password")
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "1.7.0"
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "1.7.0"
    implementation group: "org.spigotmc", name: "spigot-api", version: "1.12.2-R0.1-SNAPSHOT"
    implementation group: "org.bstats", name: "bstats-bukkit", version: "3.0.0"
    implementation group: "org.jooq", name: "jooq", version: "3.16.6"
    implementation platform("org.http4k:http4k-bom:4.27.0.0")
    implementation group: "org.http4k", name: "http4k-core"
    implementation group: "org.http4k", name: "http4k-server-jetty"
    implementation group: "org.http4k", name: "http4k-format-gson"
    implementation group: "org.slf4j", name: "slf4j-jdk14", version: "2.0.0-alpha7"
    implementation group: "me.clip", name: "placeholderapi", version: "2.11.1"
    implementation group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.0.0-SNAPSHOT"
    implementation project(":rpk-core")
    implementation project(":bukkit:rpk-core-bukkit")
    implementation project(":bukkit:rpk-player-lib-bukkit")
    implementation project(":bukkit:rpk-character-lib-bukkit")
    implementation project(":bukkit:rpk-permissions-lib-bukkit")
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

shadowJar {

    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-common"))
        include(dependency("org.jetbrains:annotations"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
        include(dependency("org.bstats:bstats-bukkit"))
        include(dependency("org.bstats:bstats-base"))
        include(dependency("org.jooq:jooq"))
        include(dependency("io.r2dbc:r2dbc-spi"))
        include(dependency("org.reactivestreams:reactive-streams"))
        include(dependency("javax.xml.bind:jaxb-api"))
        include(dependency("javax.activation:javax.activation-api"))
        include(dependency("org.http4k:http4k-core"))
        include(dependency("org.http4k:http4k-server-jetty"))
        include(dependency("org.http4k:http4k-realtime-core"))
        include(dependency("org.eclipse.jetty:jetty-server"))
        include(dependency("org.eclipse.jetty.toolchain:jetty-jakarta-servlet-api"))
        include(dependency("org.eclipse.jetty:jetty-http"))
        include(dependency("org.eclipse.jetty:jetty-util"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("org.slf4j:slf4j-jdk14"))
        include(dependency("org.eclipse.jetty:jetty-io"))
        include(dependency("org.eclipse.jetty:jetty-servlet"))
        include(dependency("org.eclipse.jetty:jetty-security"))
        include(dependency("javax.servlet:javax.servlet-api"))
        include(dependency("org.eclipse.jetty.websocket:websocket-core-server"))
        include(dependency("org.eclipse.jetty.websocket:websocket-core-common"))
        include(dependency("org.http4k:http4k-format-gson"))
        include(dependency("org.http4k:http4k-format-core"))
        include(dependency("com.google.code.gson:gson"))
    }

    relocate "kotlin", "com.rpkit.characters.bukkit.shadow.impl.kotlin"
    relocate "org.jetbrains", "com.rpkit.characters.bukkit.shadow.impl.org.jetbrains"
    relocate "org.intellij", "com.rpkit.characters.bukkit.shadow.impl.org.intellij"
    relocate "org.bstats", "com.rpkit.characters.bukkit.shadow.impl.org.bstats"
    relocate "org.jooq", "com.rpkit.characters.bukkit.shadow.impl.org.jooq"
    relocate "org.reactivestreams", "com.rpkit.characters.bukkit.shadow.impl.org.reactivestreams"
    relocate "javax.xml.bind", "com.rpkit.characters.bukkit.shadow.impl.javax.xml.bind"
    relocate "javax.activation", "com.rpkit.characters.bukkit.shadow.impl.javax.activation"
    relocate "org.http4k", "com.rpkit.characters.bukkit.shadow.impl.org.http4k"
    relocate "javax.servlet", "com.rpkit.characters.bukkit.shadow.impl.javax.servlet"
    relocate "org.eclipse", "com.rpkit.characters.bukkit.shadow.impl.org.eclipse"
    relocate "org.slf4j", "com.rpkit.characters.bukkit.shadow.impl.org.slf4j"
    relocate "com.google", "com.rpkit.characters.bukkit.shadow.impl.com.google"

    mergeServiceFiles()

}

artifacts {
    archives shadowJar
}

publishing {
    repositories {
        maven {
            credentials {
                username repoUserName
                password repoPassword
            }
            url "https://repo.rpkit.com/repository/maven-releases/"
        }
    }
    publications {
        maven(MavenPublication) { publication ->
            version = project(":bukkit:rpk-characters-bukkit").version
            artifactId = project(":bukkit:rpk-characters-bukkit").name
            groupId = project(":bukkit:rpk-characters-bukkit").group

            from project(":bukkit:rpk-characters-bukkit").shadow.component(publication)
        }
    }
}