/*
 * This file is generated by jOOQ.
 */
package com.rpkit.economy.bukkit.database.jooq.tables;


import com.rpkit.economy.bukkit.database.jooq.Keys;
import com.rpkit.economy.bukkit.database.jooq.RpkitEconomy;
import com.rpkit.economy.bukkit.database.jooq.tables.records.RpkitWalletRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitWallet extends TableImpl<RpkitWalletRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_economy.rpkit_wallet</code>
     */
    public static final RpkitWallet RPKIT_WALLET = new RpkitWallet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitWalletRecord> getRecordType() {
        return RpkitWalletRecord.class;
    }

    /**
     * The column <code>rpkit_economy.rpkit_wallet.character_id</code>.
     */
    public final TableField<RpkitWalletRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_economy.rpkit_wallet.currency_name</code>.
     */
    public final TableField<RpkitWalletRecord, String> CURRENCY_NAME = createField(DSL.name("currency_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_economy.rpkit_wallet.balance</code>.
     */
    public final TableField<RpkitWalletRecord, Integer> BALANCE = createField(DSL.name("balance"), SQLDataType.INTEGER.nullable(false), this, "");

    private RpkitWallet(Name alias, Table<RpkitWalletRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitWallet(Name alias, Table<RpkitWalletRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_economy.rpkit_wallet</code> table reference
     */
    public RpkitWallet(String alias) {
        this(DSL.name(alias), RPKIT_WALLET);
    }

    /**
     * Create an aliased <code>rpkit_economy.rpkit_wallet</code> table reference
     */
    public RpkitWallet(Name alias) {
        this(alias, RPKIT_WALLET);
    }

    /**
     * Create a <code>rpkit_economy.rpkit_wallet</code> table reference
     */
    public RpkitWallet() {
        this(DSL.name("rpkit_wallet"), null);
    }

    public <O extends Record> RpkitWallet(Table<O> child, ForeignKey<O, RpkitWalletRecord> key) {
        super(child, key, RPKIT_WALLET);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : RpkitEconomy.RPKIT_ECONOMY;
    }

    @Override
    public UniqueKey<RpkitWalletRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_WALLET_PRIMARY;
    }

    @Override
    public RpkitWallet as(String alias) {
        return new RpkitWallet(DSL.name(alias), this);
    }

    @Override
    public RpkitWallet as(Name alias) {
        return new RpkitWallet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitWallet rename(String name) {
        return new RpkitWallet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitWallet rename(Name name) {
        return new RpkitWallet(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
