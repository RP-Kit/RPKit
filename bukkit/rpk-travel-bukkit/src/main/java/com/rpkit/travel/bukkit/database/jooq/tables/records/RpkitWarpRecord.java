/*
 * This file is generated by jOOQ.
 */
package com.rpkit.travel.bukkit.database.jooq.tables.records;


import com.rpkit.travel.bukkit.database.jooq.tables.RpkitWarp;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitWarpRecord extends TableRecordImpl<RpkitWarpRecord> implements Record7<String, String, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.world</code>.
     */
    public void setWorld(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.world</code>.
     */
    public String getWorld() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.x</code>.
     */
    public void setX(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.x</code>.
     */
    public Double getX() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.y</code>.
     */
    public void setY(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.y</code>.
     */
    public Double getY() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.z</code>.
     */
    public void setZ(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.z</code>.
     */
    public Double getZ() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.yaw</code>.
     */
    public void setYaw(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.yaw</code>.
     */
    public Double getYaw() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>rpkit_travel.rpkit_warp.pitch</code>.
     */
    public void setPitch(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>rpkit_travel.rpkit_warp.pitch</code>.
     */
    public Double getPitch() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, Double, Double, Double, Double, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RpkitWarp.RPKIT_WARP.NAME;
    }

    @Override
    public Field<String> field2() {
        return RpkitWarp.RPKIT_WARP.WORLD;
    }

    @Override
    public Field<Double> field3() {
        return RpkitWarp.RPKIT_WARP.X;
    }

    @Override
    public Field<Double> field4() {
        return RpkitWarp.RPKIT_WARP.Y;
    }

    @Override
    public Field<Double> field5() {
        return RpkitWarp.RPKIT_WARP.Z;
    }

    @Override
    public Field<Double> field6() {
        return RpkitWarp.RPKIT_WARP.YAW;
    }

    @Override
    public Field<Double> field7() {
        return RpkitWarp.RPKIT_WARP.PITCH;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getWorld();
    }

    @Override
    public Double component3() {
        return getX();
    }

    @Override
    public Double component4() {
        return getY();
    }

    @Override
    public Double component5() {
        return getZ();
    }

    @Override
    public Double component6() {
        return getYaw();
    }

    @Override
    public Double component7() {
        return getPitch();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getWorld();
    }

    @Override
    public Double value3() {
        return getX();
    }

    @Override
    public Double value4() {
        return getY();
    }

    @Override
    public Double value5() {
        return getZ();
    }

    @Override
    public Double value6() {
        return getYaw();
    }

    @Override
    public Double value7() {
        return getPitch();
    }

    @Override
    public RpkitWarpRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value2(String value) {
        setWorld(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value3(Double value) {
        setX(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value4(Double value) {
        setY(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value5(Double value) {
        setZ(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value6(Double value) {
        setYaw(value);
        return this;
    }

    @Override
    public RpkitWarpRecord value7(Double value) {
        setPitch(value);
        return this;
    }

    @Override
    public RpkitWarpRecord values(String value1, String value2, Double value3, Double value4, Double value5, Double value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RpkitWarpRecord
     */
    public RpkitWarpRecord() {
        super(RpkitWarp.RPKIT_WARP);
    }

    /**
     * Create a detached, initialised RpkitWarpRecord
     */
    public RpkitWarpRecord(String name, String world, Double x, Double y, Double z, Double yaw, Double pitch) {
        super(RpkitWarp.RPKIT_WARP);

        setName(name);
        setWorld(world);
        setX(x);
        setY(y);
        setZ(z);
        setYaw(yaw);
        setPitch(pitch);
    }
}
