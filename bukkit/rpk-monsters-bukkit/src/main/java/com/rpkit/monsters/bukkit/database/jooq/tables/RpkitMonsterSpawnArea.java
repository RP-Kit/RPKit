/*
 * This file is generated by jOOQ.
 */
package com.rpkit.monsters.bukkit.database.jooq.tables;


import com.rpkit.monsters.bukkit.database.jooq.Keys;
import com.rpkit.monsters.bukkit.database.jooq.RpkitMonsters;
import com.rpkit.monsters.bukkit.database.jooq.tables.records.RpkitMonsterSpawnAreaRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitMonsterSpawnArea extends TableImpl<RpkitMonsterSpawnAreaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_monsters.rpkit_monster_spawn_area</code>
     */
    public static final RpkitMonsterSpawnArea RPKIT_MONSTER_SPAWN_AREA = new RpkitMonsterSpawnArea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitMonsterSpawnAreaRecord> getRecordType() {
        return RpkitMonsterSpawnAreaRecord.class;
    }

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.id</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.world</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, String> WORLD = createField(DSL.name("world"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.min_x</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MIN_X = createField(DSL.name("min_x"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.min_y</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MIN_Y = createField(DSL.name("min_y"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.min_z</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MIN_Z = createField(DSL.name("min_z"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.max_x</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MAX_X = createField(DSL.name("max_x"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.max_y</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MAX_Y = createField(DSL.name("max_y"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_monsters.rpkit_monster_spawn_area.max_z</code>.
     */
    public final TableField<RpkitMonsterSpawnAreaRecord, Integer> MAX_Z = createField(DSL.name("max_z"), SQLDataType.INTEGER.nullable(false), this, "");

    private RpkitMonsterSpawnArea(Name alias, Table<RpkitMonsterSpawnAreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitMonsterSpawnArea(Name alias, Table<RpkitMonsterSpawnAreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_monsters.rpkit_monster_spawn_area</code> table reference
     */
    public RpkitMonsterSpawnArea(String alias) {
        this(DSL.name(alias), RPKIT_MONSTER_SPAWN_AREA);
    }

    /**
     * Create an aliased <code>rpkit_monsters.rpkit_monster_spawn_area</code> table reference
     */
    public RpkitMonsterSpawnArea(Name alias) {
        this(alias, RPKIT_MONSTER_SPAWN_AREA);
    }

    /**
     * Create a <code>rpkit_monsters.rpkit_monster_spawn_area</code> table reference
     */
    public RpkitMonsterSpawnArea() {
        this(DSL.name("rpkit_monster_spawn_area"), null);
    }

    public <O extends Record> RpkitMonsterSpawnArea(Table<O> child, ForeignKey<O, RpkitMonsterSpawnAreaRecord> key) {
        super(child, key, RPKIT_MONSTER_SPAWN_AREA);
    }

    @Override
    public Schema getSchema() {
        return RpkitMonsters.RPKIT_MONSTERS;
    }

    @Override
    public Identity<RpkitMonsterSpawnAreaRecord, Integer> getIdentity() {
        return (Identity<RpkitMonsterSpawnAreaRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RpkitMonsterSpawnAreaRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_MONSTER_SPAWN_AREA_PRIMARY;
    }

    @Override
    public List<UniqueKey<RpkitMonsterSpawnAreaRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitMonsterSpawnAreaRecord>>asList(Keys.KEY_RPKIT_MONSTER_SPAWN_AREA_PRIMARY);
    }

    @Override
    public RpkitMonsterSpawnArea as(String alias) {
        return new RpkitMonsterSpawnArea(DSL.name(alias), this);
    }

    @Override
    public RpkitMonsterSpawnArea as(Name alias) {
        return new RpkitMonsterSpawnArea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitMonsterSpawnArea rename(String name) {
        return new RpkitMonsterSpawnArea(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitMonsterSpawnArea rename(Name name) {
        return new RpkitMonsterSpawnArea(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
