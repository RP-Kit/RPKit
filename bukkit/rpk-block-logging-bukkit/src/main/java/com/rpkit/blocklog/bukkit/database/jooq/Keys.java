/*
 * This file is generated by jOOQ.
 */
package com.rpkit.blocklog.bukkit.database.jooq;


import com.rpkit.blocklog.bukkit.database.jooq.tables.FlywaySchemaHistoryBlocklogging;
import com.rpkit.blocklog.bukkit.database.jooq.tables.RpkitBlockChange;
import com.rpkit.blocklog.bukkit.database.jooq.tables.RpkitBlockHistory;
import com.rpkit.blocklog.bukkit.database.jooq.tables.RpkitBlockInventoryChange;
import com.rpkit.blocklog.bukkit.database.jooq.tables.records.FlywaySchemaHistoryBlockloggingRecord;
import com.rpkit.blocklog.bukkit.database.jooq.tables.records.RpkitBlockChangeRecord;
import com.rpkit.blocklog.bukkit.database.jooq.tables.records.RpkitBlockHistoryRecord;
import com.rpkit.blocklog.bukkit.database.jooq.tables.records.RpkitBlockInventoryChangeRecord;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * rpkit_block_logging.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryBlockloggingRecord> KEY_FLYWAY_SCHEMA_HISTORY_BLOCKLOGGING_PRIMARY = Internal.createUniqueKey(FlywaySchemaHistoryBlocklogging.FLYWAY_SCHEMA_HISTORY_BLOCKLOGGING, DSL.name("KEY_flyway_schema_history_blocklogging_PRIMARY"), new TableField[] { FlywaySchemaHistoryBlocklogging.FLYWAY_SCHEMA_HISTORY_BLOCKLOGGING.INSTALLED_RANK }, true);
    public static final UniqueKey<RpkitBlockChangeRecord> KEY_RPKIT_BLOCK_CHANGE_PRIMARY = Internal.createUniqueKey(RpkitBlockChange.RPKIT_BLOCK_CHANGE, DSL.name("KEY_rpkit_block_change_PRIMARY"), new TableField[] { RpkitBlockChange.RPKIT_BLOCK_CHANGE.ID }, true);
    public static final UniqueKey<RpkitBlockHistoryRecord> KEY_RPKIT_BLOCK_HISTORY_PRIMARY = Internal.createUniqueKey(RpkitBlockHistory.RPKIT_BLOCK_HISTORY, DSL.name("KEY_rpkit_block_history_PRIMARY"), new TableField[] { RpkitBlockHistory.RPKIT_BLOCK_HISTORY.ID }, true);
    public static final UniqueKey<RpkitBlockInventoryChangeRecord> KEY_RPKIT_BLOCK_INVENTORY_CHANGE_PRIMARY = Internal.createUniqueKey(RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE, DSL.name("KEY_rpkit_block_inventory_change_PRIMARY"), new TableField[] { RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE.ID }, true);
}
