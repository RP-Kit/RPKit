/*
 * This file is generated by jOOQ.
 */
package com.rpkit.languages.bukkit.database.jooq.tables;


import com.rpkit.languages.bukkit.database.jooq.RpkitLanguages;
import com.rpkit.languages.bukkit.database.jooq.tables.records.RpkitCharacterLanguageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitCharacterLanguage extends TableImpl<RpkitCharacterLanguageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>rpkit_languages.rpkit_character_language</code>
     */
    public static final RpkitCharacterLanguage RPKIT_CHARACTER_LANGUAGE = new RpkitCharacterLanguage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitCharacterLanguageRecord> getRecordType() {
        return RpkitCharacterLanguageRecord.class;
    }

    /**
     * The column
     * <code>rpkit_languages.rpkit_character_language.character_id</code>.
     */
    public final TableField<RpkitCharacterLanguageRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>rpkit_languages.rpkit_character_language.language_name</code>.
     */
    public final TableField<RpkitCharacterLanguageRecord, String> LANGUAGE_NAME = createField(DSL.name("language_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column
     * <code>rpkit_languages.rpkit_character_language.understanding</code>.
     */
    public final TableField<RpkitCharacterLanguageRecord, Double> UNDERSTANDING = createField(DSL.name("understanding"), SQLDataType.DOUBLE.nullable(false), this, "");

    private RpkitCharacterLanguage(Name alias, Table<RpkitCharacterLanguageRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitCharacterLanguage(Name alias, Table<RpkitCharacterLanguageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_languages.rpkit_character_language</code>
     * table reference
     */
    public RpkitCharacterLanguage(String alias) {
        this(DSL.name(alias), RPKIT_CHARACTER_LANGUAGE);
    }

    /**
     * Create an aliased <code>rpkit_languages.rpkit_character_language</code>
     * table reference
     */
    public RpkitCharacterLanguage(Name alias) {
        this(alias, RPKIT_CHARACTER_LANGUAGE);
    }

    /**
     * Create a <code>rpkit_languages.rpkit_character_language</code> table
     * reference
     */
    public RpkitCharacterLanguage() {
        this(DSL.name("rpkit_character_language"), null);
    }

    public <O extends Record> RpkitCharacterLanguage(Table<O> child, ForeignKey<O, RpkitCharacterLanguageRecord> key) {
        super(child, key, RPKIT_CHARACTER_LANGUAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : RpkitLanguages.RPKIT_LANGUAGES;
    }

    @Override
    public RpkitCharacterLanguage as(String alias) {
        return new RpkitCharacterLanguage(DSL.name(alias), this);
    }

    @Override
    public RpkitCharacterLanguage as(Name alias) {
        return new RpkitCharacterLanguage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCharacterLanguage rename(String name) {
        return new RpkitCharacterLanguage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCharacterLanguage rename(Name name) {
        return new RpkitCharacterLanguage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
