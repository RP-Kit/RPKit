/*
 * This file is generated by jOOQ.
 */
package com.rpkit.players.bukkit.database.jooq.tables;


import com.rpkit.players.bukkit.database.jooq.Keys;
import com.rpkit.players.bukkit.database.jooq.RpkitPlayers;
import com.rpkit.players.bukkit.database.jooq.tables.records.RpkitGithubProfileRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitGithubProfile extends TableImpl<RpkitGithubProfileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_players.rpkit_github_profile</code>
     */
    public static final RpkitGithubProfile RPKIT_GITHUB_PROFILE = new RpkitGithubProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitGithubProfileRecord> getRecordType() {
        return RpkitGithubProfileRecord.class;
    }

    /**
     * The column <code>rpkit_players.rpkit_github_profile.id</code>.
     */
    public final TableField<RpkitGithubProfileRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit_players.rpkit_github_profile.profile_id</code>.
     */
    public final TableField<RpkitGithubProfileRecord, Integer> PROFILE_ID = createField(DSL.name("profile_id"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rpkit_players.rpkit_github_profile.name</code>.
     */
    public final TableField<RpkitGithubProfileRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_players.rpkit_github_profile.oauth_token</code>.
     */
    public final TableField<RpkitGithubProfileRecord, String> OAUTH_TOKEN = createField(DSL.name("oauth_token"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    private RpkitGithubProfile(Name alias, Table<RpkitGithubProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitGithubProfile(Name alias, Table<RpkitGithubProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_players.rpkit_github_profile</code> table reference
     */
    public RpkitGithubProfile(String alias) {
        this(DSL.name(alias), RPKIT_GITHUB_PROFILE);
    }

    /**
     * Create an aliased <code>rpkit_players.rpkit_github_profile</code> table reference
     */
    public RpkitGithubProfile(Name alias) {
        this(alias, RPKIT_GITHUB_PROFILE);
    }

    /**
     * Create a <code>rpkit_players.rpkit_github_profile</code> table reference
     */
    public RpkitGithubProfile() {
        this(DSL.name("rpkit_github_profile"), null);
    }

    public <O extends Record> RpkitGithubProfile(Table<O> child, ForeignKey<O, RpkitGithubProfileRecord> key) {
        super(child, key, RPKIT_GITHUB_PROFILE);
    }

    @Override
    public Schema getSchema() {
        return RpkitPlayers.RPKIT_PLAYERS;
    }

    @Override
    public Identity<RpkitGithubProfileRecord, Integer> getIdentity() {
        return (Identity<RpkitGithubProfileRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RpkitGithubProfileRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_GITHUB_PROFILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<RpkitGithubProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitGithubProfileRecord>>asList(Keys.KEY_RPKIT_GITHUB_PROFILE_PRIMARY);
    }

    @Override
    public RpkitGithubProfile as(String alias) {
        return new RpkitGithubProfile(DSL.name(alias), this);
    }

    @Override
    public RpkitGithubProfile as(Name alias) {
        return new RpkitGithubProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitGithubProfile rename(String name) {
        return new RpkitGithubProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitGithubProfile rename(Name name) {
        return new RpkitGithubProfile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
