/*
 * This file is generated by jOOQ.
 */
package com.rpkit.players.bukkit.database.jooq.tables;


import com.rpkit.players.bukkit.database.jooq.Keys;
import com.rpkit.players.bukkit.database.jooq.RpkitPlayers;
import com.rpkit.players.bukkit.database.jooq.tables.records.RpkitIrcProfileRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitIrcProfile extends TableImpl<RpkitIrcProfileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_players.rpkit_irc_profile</code>
     */
    public static final RpkitIrcProfile RPKIT_IRC_PROFILE = new RpkitIrcProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitIrcProfileRecord> getRecordType() {
        return RpkitIrcProfileRecord.class;
    }

    /**
     * The column <code>rpkit_players.rpkit_irc_profile.id</code>.
     */
    public final TableField<RpkitIrcProfileRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit_players.rpkit_irc_profile.profile_id</code>.
     */
    public final TableField<RpkitIrcProfileRecord, Integer> PROFILE_ID = createField(DSL.name("profile_id"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rpkit_players.rpkit_irc_profile.nick</code>.
     */
    public final TableField<RpkitIrcProfileRecord, String> NICK = createField(DSL.name("nick"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    private RpkitIrcProfile(Name alias, Table<RpkitIrcProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitIrcProfile(Name alias, Table<RpkitIrcProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_players.rpkit_irc_profile</code> table reference
     */
    public RpkitIrcProfile(String alias) {
        this(DSL.name(alias), RPKIT_IRC_PROFILE);
    }

    /**
     * Create an aliased <code>rpkit_players.rpkit_irc_profile</code> table reference
     */
    public RpkitIrcProfile(Name alias) {
        this(alias, RPKIT_IRC_PROFILE);
    }

    /**
     * Create a <code>rpkit_players.rpkit_irc_profile</code> table reference
     */
    public RpkitIrcProfile() {
        this(DSL.name("rpkit_irc_profile"), null);
    }

    public <O extends Record> RpkitIrcProfile(Table<O> child, ForeignKey<O, RpkitIrcProfileRecord> key) {
        super(child, key, RPKIT_IRC_PROFILE);
    }

    @Override
    public Schema getSchema() {
        return RpkitPlayers.RPKIT_PLAYERS;
    }

    @Override
    public Identity<RpkitIrcProfileRecord, Integer> getIdentity() {
        return (Identity<RpkitIrcProfileRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RpkitIrcProfileRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_IRC_PROFILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<RpkitIrcProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitIrcProfileRecord>>asList(Keys.KEY_RPKIT_IRC_PROFILE_PRIMARY);
    }

    @Override
    public RpkitIrcProfile as(String alias) {
        return new RpkitIrcProfile(DSL.name(alias), this);
    }

    @Override
    public RpkitIrcProfile as(Name alias) {
        return new RpkitIrcProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitIrcProfile rename(String name) {
        return new RpkitIrcProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitIrcProfile rename(Name name) {
        return new RpkitIrcProfile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
