/*
 * This file is generated by jOOQ.
 */
package com.rpkit.auctions.bukkit.database.jooq.tables;


import com.rpkit.auctions.bukkit.database.jooq.Keys;
import com.rpkit.auctions.bukkit.database.jooq.RpkitAuctions;
import com.rpkit.auctions.bukkit.database.jooq.tables.records.RpkitBidRecord;
import org.jooq.*;
import org.jooq.Record;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitBid extends TableImpl<RpkitBidRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_auctions.rpkit_bid</code>
     */
    public static final RpkitBid RPKIT_BID = new RpkitBid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitBidRecord> getRecordType() {
        return RpkitBidRecord.class;
    }

    /**
     * The column <code>rpkit_auctions.rpkit_bid.id</code>.
     */
    public final TableField<RpkitBidRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit_auctions.rpkit_bid.auction_id</code>.
     */
    public final TableField<RpkitBidRecord, Integer> AUCTION_ID = createField(DSL.name("auction_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_auctions.rpkit_bid.character_id</code>.
     */
    public final TableField<RpkitBidRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_auctions.rpkit_bid.amount</code>.
     */
    public final TableField<RpkitBidRecord, Integer> AMOUNT = createField(DSL.name("amount"), SQLDataType.INTEGER.nullable(false), this, "");

    private RpkitBid(Name alias, Table<RpkitBidRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitBid(Name alias, Table<RpkitBidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_auctions.rpkit_bid</code> table reference
     */
    public RpkitBid(String alias) {
        this(DSL.name(alias), RPKIT_BID);
    }

    /**
     * Create an aliased <code>rpkit_auctions.rpkit_bid</code> table reference
     */
    public RpkitBid(Name alias) {
        this(alias, RPKIT_BID);
    }

    /**
     * Create a <code>rpkit_auctions.rpkit_bid</code> table reference
     */
    public RpkitBid() {
        this(DSL.name("rpkit_bid"), null);
    }

    public <O extends Record> RpkitBid(Table<O> child, ForeignKey<O, RpkitBidRecord> key) {
        super(child, key, RPKIT_BID);
    }

    @Override
    public Schema getSchema() {
        return RpkitAuctions.RPKIT_AUCTIONS;
    }

    @Override
    public Identity<RpkitBidRecord, Integer> getIdentity() {
        return (Identity<RpkitBidRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RpkitBidRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_BID_PRIMARY;
    }

    @Override
    public List<UniqueKey<RpkitBidRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitBidRecord>>asList(Keys.KEY_RPKIT_BID_PRIMARY);
    }

    @Override
    public RpkitBid as(String alias) {
        return new RpkitBid(DSL.name(alias), this);
    }

    @Override
    public RpkitBid as(Name alias) {
        return new RpkitBid(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitBid rename(String name) {
        return new RpkitBid(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitBid rename(Name name) {
        return new RpkitBid(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
