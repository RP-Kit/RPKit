/*
 * This file is generated by jOOQ.
 */
package com.rpkit.store.bukkit.database.jooq.tables;


import com.rpkit.store.bukkit.database.jooq.Keys;
import com.rpkit.store.bukkit.database.jooq.RpkitStores;
import com.rpkit.store.bukkit.database.jooq.tables.records.RpkitPurchaseRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitPurchase extends TableImpl<RpkitPurchaseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_stores.rpkit_purchase</code>
     */
    public static final RpkitPurchase RPKIT_PURCHASE = new RpkitPurchase();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitPurchaseRecord> getRecordType() {
        return RpkitPurchaseRecord.class;
    }

    /**
     * The column <code>rpkit_stores.rpkit_purchase.id</code>.
     */
    public final TableField<RpkitPurchaseRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit_stores.rpkit_purchase.store_item_id</code>.
     */
    public final TableField<RpkitPurchaseRecord, Integer> STORE_ITEM_ID = createField(DSL.name("store_item_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_stores.rpkit_purchase.profile_id</code>.
     */
    public final TableField<RpkitPurchaseRecord, Integer> PROFILE_ID = createField(DSL.name("profile_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_stores.rpkit_purchase.purchase_date</code>.
     */
    public final TableField<RpkitPurchaseRecord, LocalDateTime> PURCHASE_DATE = createField(DSL.name("purchase_date"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("current_timestamp()", SQLDataType.LOCALDATETIME)), this, "");

    private RpkitPurchase(Name alias, Table<RpkitPurchaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitPurchase(Name alias, Table<RpkitPurchaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_stores.rpkit_purchase</code> table
     * reference
     */
    public RpkitPurchase(String alias) {
        this(DSL.name(alias), RPKIT_PURCHASE);
    }

    /**
     * Create an aliased <code>rpkit_stores.rpkit_purchase</code> table
     * reference
     */
    public RpkitPurchase(Name alias) {
        this(alias, RPKIT_PURCHASE);
    }

    /**
     * Create a <code>rpkit_stores.rpkit_purchase</code> table reference
     */
    public RpkitPurchase() {
        this(DSL.name("rpkit_purchase"), null);
    }

    public <O extends Record> RpkitPurchase(Table<O> child, ForeignKey<O, RpkitPurchaseRecord> key) {
        super(child, key, RPKIT_PURCHASE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : RpkitStores.RPKIT_STORES;
    }

    @Override
    public Identity<RpkitPurchaseRecord, Integer> getIdentity() {
        return (Identity<RpkitPurchaseRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RpkitPurchaseRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_PURCHASE_PRIMARY;
    }

    @Override
    public RpkitPurchase as(String alias) {
        return new RpkitPurchase(DSL.name(alias), this);
    }

    @Override
    public RpkitPurchase as(Name alias) {
        return new RpkitPurchase(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitPurchase rename(String name) {
        return new RpkitPurchase(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitPurchase rename(Name name) {
        return new RpkitPurchase(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
