/*
 * This file is generated by jOOQ.
 */
package com.rpkit.skills.bukkit.database.jooq.tables;


import com.rpkit.skills.bukkit.database.jooq.RpkitSkills;
import com.rpkit.skills.bukkit.database.jooq.tables.records.RpkitSkillCooldownRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitSkillCooldown extends TableImpl<RpkitSkillCooldownRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>rpkit_skills.rpkit_skill_cooldown</code>
     */
    public static final RpkitSkillCooldown RPKIT_SKILL_COOLDOWN = new RpkitSkillCooldown();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitSkillCooldownRecord> getRecordType() {
        return RpkitSkillCooldownRecord.class;
    }

    /**
     * The column <code>rpkit_skills.rpkit_skill_cooldown.character_id</code>.
     */
    public final TableField<RpkitSkillCooldownRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_skills.rpkit_skill_cooldown.skill_name</code>.
     */
    public final TableField<RpkitSkillCooldownRecord, String> SKILL_NAME = createField(DSL.name("skill_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column
     * <code>rpkit_skills.rpkit_skill_cooldown.cooldown_timestamp</code>.
     */
    public final TableField<RpkitSkillCooldownRecord, LocalDateTime> COOLDOWN_TIMESTAMP = createField(DSL.name("cooldown_timestamp"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("current_timestamp()", SQLDataType.LOCALDATETIME)), this, "");

    private RpkitSkillCooldown(Name alias, Table<RpkitSkillCooldownRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitSkillCooldown(Name alias, Table<RpkitSkillCooldownRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>rpkit_skills.rpkit_skill_cooldown</code> table
     * reference
     */
    public RpkitSkillCooldown(String alias) {
        this(DSL.name(alias), RPKIT_SKILL_COOLDOWN);
    }

    /**
     * Create an aliased <code>rpkit_skills.rpkit_skill_cooldown</code> table
     * reference
     */
    public RpkitSkillCooldown(Name alias) {
        this(alias, RPKIT_SKILL_COOLDOWN);
    }

    /**
     * Create a <code>rpkit_skills.rpkit_skill_cooldown</code> table reference
     */
    public RpkitSkillCooldown() {
        this(DSL.name("rpkit_skill_cooldown"), null);
    }

    public <O extends Record> RpkitSkillCooldown(Table<O> child, ForeignKey<O, RpkitSkillCooldownRecord> key) {
        super(child, key, RPKIT_SKILL_COOLDOWN);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : RpkitSkills.RPKIT_SKILLS;
    }

    @Override
    public RpkitSkillCooldown as(String alias) {
        return new RpkitSkillCooldown(DSL.name(alias), this);
    }

    @Override
    public RpkitSkillCooldown as(Name alias) {
        return new RpkitSkillCooldown(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitSkillCooldown rename(String name) {
        return new RpkitSkillCooldown(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitSkillCooldown rename(Name name) {
        return new RpkitSkillCooldown(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
